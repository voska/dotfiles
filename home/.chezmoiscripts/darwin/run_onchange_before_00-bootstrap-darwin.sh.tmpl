#!/bin/bash
# Bootstrap macOS with Xcode CLT and Homebrew
# Hash: {{ output "sw_vers" "--productVersion" | sha256sum }}

set -eufo pipefail

echo "üçé Bootstrapping macOS..."

# Install Xcode Command Line Tools
if xcode-select -p &> /dev/null; then
    echo "‚úÖ  Xcode command line tools are already installed."
else
    echo "üîß  Installing Xcode command line tools..."
    # Use softwareupdate for automated installation
    touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    
    label=$(softwareupdate -l | \
        grep -B 1 -E 'Command Line Tools' | \
        awk -F'*' '/^ *\\*/ {print $2}' | \
        sed -e 's/^ *Label: //' -e 's/^ *//' | \
        sort -V | tail -n1)
    
    if [ -n "$label" ]; then
        softwareupdate -i "$label" --verbose
        echo "‚úÖ  Xcode command line tools installed successfully."
    else
        xcode-select --install
        echo "‚ùå Complete Xcode CLT installation and re-run chezmoi apply"
        exit 1
    fi
    
    rm -f /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
fi

# Accept license
if /usr/bin/xcrun clang 2>&1 | grep -q "license"; then
    sudo xcodebuild -license accept
    echo "‚úÖ  Xcode license accepted."
fi

# Install Homebrew
if which -s "brew"; then
  echo "‚úÖ  Homebrew is already installed."
else
    echo "üç∫  Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    echo "‚úÖ  Homebrew installed successfully."

    # Add to PATH for current session
    if [[ -f "/opt/homebrew/bin/brew" ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    elif [[ -f "/usr/local/bin/brew" ]]; then
        eval "$(/usr/local/bin/brew shellenv)"
    fi
fi

brew update
echo "‚úÖ  Homebrew updated successfully."
